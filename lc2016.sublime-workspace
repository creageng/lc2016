{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"in",
				"index"
			],
			[
				"le",
				"level"
			],
			[
				"r",
				"rsteps"
			],
			[
				"s",
				"strNum"
			],
			[
				"i",
				"iterate"
			],
			[
				"nu",
				"nums"
			],
			[
				"n",
				"nums"
			],
			[
				"ver",
				"version2"
			],
			[
				"lv",
				"lv2"
			],
			[
				"loc",
				"localMax"
			],
			[
				"lo",
				"localMin"
			],
			[
				"num",
				"nums"
			],
			[
				"min",
				"minNum"
			],
			[
				"ma",
				"maxNum"
			],
			[
				"bu",
				"buckets"
			],
			[
				"ra",
				"RADIX"
			],
			[
				"tmp",
				"tmpB"
			],
			[
				"tm",
				"tmpB"
			],
			[
				"hea",
				"headB"
			],
			[
				"he",
				"headB"
			],
			[
				"head",
				"headA"
			],
			[
				"op",
				"op1"
			],
			[
				"t",
				"tokens"
			],
			[
				"sle",
				"slope"
			],
			[
				"point",
				"points"
			],
			[
				"sel",
				"slope"
			],
			[
				"h",
				"head2"
			],
			[
				"ha",
				"head"
			],
			[
				"se",
				"self"
			],
			[
				"c",
				"collections"
			],
			[
				"pre",
				"preorder"
			],
			[
				"cur",
				"curr1"
			],
			[
				"is",
				"iscycle"
			],
			[
				"sen",
				"sentences"
			],
			[
				"wor",
				"wordDict"
			],
			[
				"wo",
				"wordDict"
			],
			[
				"w",
				"wordDict"
			],
			[
				"ne",
				"next"
			],
			[
				"p",
				"pnew"
			],
			[
				"st",
				"stationIndex"
			],
			[
				"srin",
				"stringList"
			],
			[
				"re",
				"return"
			],
			[
				"val",
				"value"
			],
			[
				"path",
				"pathVal"
			],
			[
				"paht",
				"pathVal"
			],
			[
				"cu",
				"currLen"
			],
			[
				"par",
				"part2"
			],
			[
				"ch",
				"chgChar"
			],
			[
				"curr",
				"currWord"
			],
			[
				"be",
				"beginWord"
			],
			[
				"N",
				"nums2"
			],
			[
				"IN",
				"INT_MAX"
			],
			[
				"mi",
				"minV"
			],
			[
				"nums",
				"nums2"
			],
			[
				"n_",
				"n_non_vowels"
			],
			[
				"bui",
				"buildings"
			],
			[
				"com",
				"combinationSum3"
			],
			[
				"ser",
				"searchFrom"
			],
			[
				"f",
				"flagged"
			],
			[
				"fal",
				"flagged"
			],
			[
				"F",
				"False"
			],
			[
				"pice",
				"prices"
			],
			[
				"str",
				"strNum"
			],
			[
				"l",
				"loopStr"
			],
			[
				"de",
				"denominator"
			],
			[
				"d",
				"denominator"
			],
			[
				"ve",
				"version2"
			],
			[
				"v2",
				"v2_b"
			],
			[
				"v",
				"v1_b"
			],
			[
				"el",
				"elements"
			],
			[
				"same",
				"samePointsNum"
			],
			[
				"has",
				"hasUpdated"
			],
			[
				"can",
				"candies"
			],
			[
				"sta",
				"station_ix"
			],
			[
				"part",
				"part1"
			],
			[
				"ps",
				"ps1_root"
			],
			[
				"max",
				"max_n"
			],
			[
				"m",
				"maxSum"
			],
			[
				"sum",
				"sum_n"
			],
			[
				"pro",
				"profits"
			],
			[
				"pr",
				"prices"
			],
			[
				"El",
				"Ele_lt"
			],
			[
				"Ele",
				"Ele_lt"
			],
			[
				"E",
				"Ele_lt"
			],
			[
				"su",
				"sum-root"
			],
			[
				"Dep",
				"Dep_R"
			],
			[
				"De",
				"Dep_L"
			],
			[
				"sor",
				"sortedArrayToBST"
			],
			[
				"ret",
				"result"
			],
			[
				"lfe",
				"left2right"
			],
			[
				"next",
				"nextLayer"
			],
			[
				"che",
				"checkSym"
			],
			[
				"fa",
				"False"
			],
			[
				"ro",
				"rootVal"
			],
			[
				"no",
				"node_val"
			],
			[
				"node",
				"node_stack"
			],
			[
				"sub_",
				"sub_tail"
			],
			[
				"sub",
				"subsetsWithDup"
			],
			[
				"gr",
				"grayCode"
			],
			[
				"S",
				"Solution"
			],
			[
				"_",
				"_sub"
			],
			[
				"a",
				"appreared"
			],
			[
				"row",
				"row1_zero"
			],
			[
				"len",
				"len_word2"
			],
			[
				"word",
				"word2"
			],
			[
				"cli",
				"climbStairs"
			],
			[
				"spe",
				"space_len"
			],
			[
				"ap",
				"append_word"
			],
			[
				"sp",
				"space_len"
			],
			[
				"pl",
				"plusOne"
			],
			[
				"o",
				"obstacleGrid"
			],
			[
				"ge",
				"getPermutation"
			],
			[
				"int",
				"intervals"
			],
			[
				"x",
				"x"
			],
			[
				"fi",
				"firstMissingPositive"
			],
			[
				"candi",
				"candidate"
			],
			[
				"tar",
				"target"
			],
			[
				"nex",
				"nextCol"
			],
			[
				"so",
				"solveSudokuRec"
			],
			[
				"pa",
				"partitionIndex"
			],
			[
				"divi",
				"divisor"
			],
			[
				"len_",
				"len_haystack"
			],
			[
				"two",
				"twosum2pair"
			],
			[
				"remove",
				"removeList"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"lev",
				"levelorder"
			],
			[
				"square",
				"squareSum"
			],
			[
				"vA",
				"vA"
			]
		]
	},
	"buffers":
	[
		{
			"file": "204_Count_Primes.py",
			"settings":
			{
				"buffer_size": 595,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\n\n\n\n\n\n\n",
			"settings":
			{
				"buffer_size": 8,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Code Folding: Fold Tag Attributes"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 92.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/hngeng/Programming/Python/leetcode_2016",
		"/Users/hngeng/Programming/Python/leetcode_2005"
	],
	"file_history":
	[
		"/Users/hngeng/Programming/Python/leetcode_2016/203_Remove_Linked_List_Elements.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/202_Happy_Number.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/201_Bitwise_AND_of_Numbers_Range.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/200_Number_of_Islands.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/188_Best_Time_to_Buy_and_Sell_Stock_IV.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/199_Binary_Tree_Right_Side_View.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/198_House_Robber.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/191_Number_of_1_Bits.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/190_Reverse_Bits.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/189_Rotate_Array.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/187_Repeated_DNA_Sequences.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/179_Largest_Number.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/174_Dungeon_Game.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/173_Binary_Search_Tree_Iterator.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/172_Factorial_Trailing_Zeroes.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/171_Excel_Sheet_Column_Number.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/169_Majority_Element.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/168_Excel_Sheet_Column_Title.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/166_Fraction_to_Recurring_Decimal.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/165_Compare_Version_Numbers.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/164_Maximum_Gap.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/160_Intersection_of_Two_Linked_Lists.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/155_Min_Stack.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/153_Find_Minimum_in_Rotated_Sorted_Array.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/154_Find_Minimum_in_Rotated_Sorted_Array_II.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/54_Find_Minimum_in_Rotated_Sorted_Array_II.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/152_Maximum_Product_Subarray.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/151_Reverse_Words_in_a_String.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/150_Evaluate_Reverse_Polish_Notation.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/149_Max_Points_on_a_Line.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/148_Sort_List.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/147_Insertion_Sort_List.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/146_LRU_Cache.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/145_Binary_Tree_Postorder_Traversal.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/144_Binary_Tree_Preorder_Traversal.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/143_Reorder_List.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/142_Linked_List_Cycle_II.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/141_Linked_List_Cycle.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/140_Word_Break_II.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/139_Word_Break.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/138_Copy_List_with_Random_Pointer.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/137_Single_Number_II.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/136_Single_Number.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/135_Candy.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/134_Gas_Station.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/133_Clone_Graph.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/132_Palindrome_Partitioning_II.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/131_Palindrome_Partitioning.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/130_Surrounded_Regions.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/129_Sum_Root_to_Leaf_Numbers.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/129_Sum_Root_to_Leaf_Numbers.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/128_Longest_Consecutive_Sequence.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/127_Word_Ladder.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/127_Word_Ladder.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/125_Valid_Palindrome.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/10_Regular_Expression_Matching.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/10_Regular_Expression_Matching.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/9_Palindrome_Number.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/9_Palindrome_Number.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/6_zigzag_conversion.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/6_ ZigZag_Conversion.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/5_Longest_Palindromic_Substring.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/5_Longest_Palindromic_Substring.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/4_Median_of_Two_Sorted_Arrays.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/4_Median_of_Two_Sorted_Arrays .py",
		"/Users/hngeng/Programming/Python/leetcode_2005/8_String_to_Integer_(atoi).py",
		"/Users/hngeng/Programming/Python/leetcode_2016/8_String_to_Integer_(atoi).py",
		"/Users/hngeng/Programming/Python/leetcode_2005/7_reverse_integer.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/7_Reverse_Integer.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/6_ZigZag_Conversion.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/4_Median_of_Two_Sorted_Arrays.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/3_Longest Substring_Without_Repeating_Characters.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/100_Same_Tree.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/2_Add_Two_Numbers.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/2_Add_Two_Numbers.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/1_Two_Sum.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/#1_two_sum.py",
		"/Users/hngeng/Programming/Python/leetcode_2016/lc2016",
		"/Users/hngeng/Programming/Python/hackerrank_2016/set.discard().py",
		"/Users/hngeng/Programming/Python/hackerrank_2016/set.add().py",
		"/Users/hngeng/Programming/Python/hackerrank_2016/No_idea.py",
		"/Users/hngeng/Programming/Python/hackerrank_2016/Capitalize.py",
		"/Users/hngeng/Programming/Python/hackerrank_2016/set.py",
		"/Users/hngeng/Programming/Python/hackerrank_2016/The_Minion_Game.py",
		"/Users/hngeng/Programming/Python/hackerrank_2016/Alphabet_Rangoli.py",
		"/Users/hngeng/Programming/GT/CS7637/project/KBAI/Project3.submitted_final/list.py",
		"/Users/hngeng/Programming/GT/CS7637/project/KBAI/Project3.submitted_final/format.py",
		"/Users/hngeng/Programming/GT/CS7637/project/KBAI/Project3.submitted_final/Agent.py",
		"/Users/hngeng/Programming/GT/CS7637/project/KBAI/Project3.submitted_final/RavensFigure.py",
		"/Users/hngeng/Programming/GT/CS7641/project2/my_working/hgeng30/code/knapsack_analysis.py",
		"/Users/hngeng/Programming/GT/CS7641/project2/my_working/hgeng30/code/fourpeaks_analysis.py",
		"/Users/hngeng/Programming/GT/CS7641/project2/my_working/hgeng30/code/continuouspeaks.py",
		"/Users/hngeng/Programming/GT/CS7641/project2/my_working/v1/fourpeaks.py",
		"/Users/hngeng/Programming/GT/CS7641/project2/my_working/hgeng30 2/code/salesman_fitness.R",
		"/Users/hngeng/Programming/GT/CS7641/project2/my_working/hgeng30 2/code/continuouspeaks.py",
		"/Users/hngeng/Programming/GT/CS7641/project2/my_working/hgeng30 2/results/nn_results.csv",
		"/Users/hngeng/Programming/GT/CS7641/project2/my_working/hgeng30 2/code/knapsack_analysis.py",
		"/Users/hngeng/Programming/GT/CS7641/project2/my_working/hgeng30 2/code/fourpeaks_analysis.py",
		"/Users/hngeng/Programming/GT/CS7641/project2/my_working/hgeng30 2/code/knapsack_time.R",
		"/Users/hngeng/Programming/Python/leetcode_2005/221_Maximal_Square.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/220_Contains_Duplicate_III.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/219_Contains_Duplicate_II.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/218_The Skyline_Problem.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/217_Contains_Duplicate.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/216_Combination_Sum_III.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/215_Kth_Largest_Element_in_an_Array.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/214_Shortest_Palindrome.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/213_House_Robber_II.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/198_House_Robber.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/210_Course_Schedule_II.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/78_Word_search.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/212. Word_Search_II.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/208_Implement_Trie_(Prefix Tree).py",
		"/Users/hngeng/Programming/Python/leetcode_2005/211. Add_and_Search_Word.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/209_Course_Schedule.py",
		"/Users/hngeng/Programming/Python/leetcode_2005/209_Minimum_Size_Subarray_Sum.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/208_Implement_Trie_(Prefix_Tree).py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/206_Reverse_Linked_List.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/205_Isomorphic_Strings.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/204_Count_Primes.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/203_Remove_Linked_List_Elements.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/202_Happy_Number.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/201_Bitwise_AND_of_Numbers_Range.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/200_Number_of_Islands.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/199_Binary_Tree_Right_Side_View.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/198_House_Robber.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/191_Number_of_1_Bits.py",
		"/Users/hngeng/Programming/GT/CS6290_HPA/Project1/submit/190_Reverse_Bits.py"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 99.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"index",
			"Zeroes",
			"parse_biom_table",
			"parse_classic_table_to_rich_table",
			"matrix",
			"curr_line",
			"curr_list",
			"dict",
			"parent",
			"5",
			"succ",
			"curr",
			"Gold",
			"dissimilarity",
			"generateXformation",
			"VisualXformation",
			"generate",
			"makeImage",
			"pixelMatch",
			"pixelMatchScore",
			"pixelMatch",
			"generateXformation",
			"complexity",
			"dissimilarity",
			"minDissimilarity",
			"alignmentAngle",
			"getAllXformationLists",
			"->3",
			"->1",
			"permut",
			"similarity relationships:",
			"C-03",
			"unknown",
			"->2",
			"->",
			"print",
			"ana",
			"print",
			"A->B->C",
			"relation",
			"->1",
			"__add_del",
			"->2",
			"__diffLenObj",
			"rela",
			"run __mul",
			"size",
			"327",
			"X-Y",
			"run __mul",
			"3x3",
			"A",
			"bc",
			"fc",
			"ans",
			"back_count",
			"forward_count",
			"0",
			"print",
			"	",
			"num_pos",
			"num_node",
			"tmp",
			"front",
			"exit",
			"front",
			"setCurrent",
			"front",
			"setCurrent",
			"front",
			"setCurrentThread",
			"setCurrent",
			"setCurrentTread",
			"data",
			"push",
			"setCurrentThread",
			"setCurrent",
			"data",
			"setCurrent",
			"data",
			"front",
			"setcu",
			"setcurrent",
			"front",
			"struct",
			"front",
			"data",
			"current",
			"active",
			"item",
			"->item",
			"isemp",
			"remove",
			"setCurrentTread",
			"gtthread_mutex_t",
			"data",
			"node",
			"data",
			"temp",
			"data",
			"item",
			"schedule",
			"gt_period",
			"data",
			"gtthrea_start",
			"element",
			"schedule",
			"setSchedulerContext",
			"chopstick_mutex",
			"hand",
			"phil_id",
			"M",
			"chopsticks_init",
			"chopsticks_finalize",
			"count",
			"printList",
			"mainThread",
			"yield",
			"CHECK(gtthread_join(t3, NULL) )\n    // gtthread_yield();\n    // printf(\"All done %s\\n\", (char*)retval);",
			"gtthread",
			"Global",
			"act",
			"FUNCTION",
			"function",
			"end",
			"if number_num",
			"swith",
			"switch"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"isPrime",
			"stackLen",
			"stack",
			"d",
			"prev",
			"fast",
			"slow",
			"nums",
			"b",
			"f",
			"res",
			"bc",
			"fc",
			"N",
			"tempt",
			"tID",
			"gt_node",
			"id",
			"wrapper_func",
			"item",
			"thread_count",
			"act"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "204_Count_Primes.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 595,
						"regions":
						{
						},
						"selection":
						[
							[
								595,
								595
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8,
						"regions":
						{
						},
						"selection":
						[
							[
								8,
								8
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.835128182769,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 98.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 125.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "lc2016.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 197.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
